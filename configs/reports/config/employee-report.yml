ReportDefinitions:
- reportName: bpaApplicationStatusReport
  decryptionPathId: bpaApplicationStatusReport
  summary: Fetches BPA data based on provided search parameters
  version: 1.0.0
  moduleName: eg_hrms_employee
  sourceColumns:
  - name: applicationno
    label: Application No
    type: string
    source: eg_hrms_employee
  - name: applicationdate
    label: Application Date
    type: string
    source: eg_hrms_employee
  - name: approval_date
    label: Approval Date
    type: string
    source: eg_hrms_employee
  - name: username
    label: Architect Name
    type: string
    source: eg_hrms_employee
  - name: altcontactnumber
    label: Architect Contact No.
    type: string
    source: eg_hrms_employee
  - name: emailid
    label: Architect Mail ID.
    type: string
    source: eg_hrms_employee
  - name: owner_1
    label: Owner Name1
    type: string
    source: eg_hrms_employee
  - name: owner_2
    label: Owner Name2
    type: string
    source: eg_hrms_employee
  - name: owner_3
    label: Owner Name3
    type: string
    source: eg_hrms_employee
  - name: owner_1_no
    label: Owner 1 Contact no.
    type: string
    source: eg_hrms_employee
  - name: owner_2_no
    label: Owner 2 Contact no.
    type: string
    source: eg_hrms_employee
  - name: owner_3_no
    label: Owner 3 Contact no.
    type: string
    source: eg_hrms_employee
  - name: khatano
    label: Khata No
    type: string
    source: eg_hrms_employee
  - name: city
    label: City
    type: string
    source: eg_hrms_employee
  - name: plotno
    label: Plot No
    type: string
    source: eg_hrms_employee
  - name: plotarea
    label: Plot Area
    type: string
    source: eg_hrms_employee
  - name: occupancy_type
    label: Occupancy Type
    type: string
    source: eg_hrms_employee
  - name: patwari_halka_no
    label: Patwari Halka No.
    type: string
    source: eg_hrms_employee
  - name: status
    label: Status
    type: string
    source: eg_hrms_employee
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: eg_hrms_employee
    wrapper: true
    isMandatory: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: eg_hrms_employee
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: eg_hrms_employee
    isMandatory: false
    searchClause: AND bp.createdtime  <= $toDate
  query: |
    WITH DistinctNames AS ( SELECT DISTINCT bp.applicationno,Citizenuser.name AS distinct_name, ROW_NUMBER() OVER (PARTITION BY bp.applicationno ORDER BY Citizenuser.name) AS rn, Citizenuser.mobilenumber AS distinct_no, ROW_NUMBER() OVER (PARTITION BY bp.applicationno ORDER BY Citizenuser.mobilenumber) AS rnn FROM eg_bpa_buildingplan bp INNER JOIN eg_land_ownerinfo ownerinfo ON bp.landid = ownerinfo.landinfoid INNER JOIN eg_user Citizenuser ON ownerinfo.uuid = Citizenuser.uuid) SELECT bp.applicationno, bp.tenantid, TO_CHAR(TO_TIMESTAMP(bp.createdtime / 1000), 'DD/MM/YYYY') AS applicationdate,
      TO_CHAR(TO_TIMESTAMP(bp.approvaldate / 1000), 'DD/MM/YYYY') AS approval_date,
      Architectuser.name AS username,
      Architectuser.mobilenumber AS altcontactnumber,
      Architectuser.emailid AS emailid,
      MAX(CASE WHEN rn = 1 THEN dn.distinct_name END) AS owner_1,
      MAX(CASE WHEN rn = 2 THEN dn.distinct_name END) AS owner_2,
      MAX(CASE WHEN rn = 3 THEN dn.distinct_name END) AS owner_3,
      MAX(CASE WHEN rnn = 1 THEN dn.distinct_no END) AS owner_1_no,
      MAX(CASE WHEN rnn = 2 THEN dn.distinct_no END) AS owner_2_no,
      MAX(CASE WHEN rnn = 3 THEN dn.distinct_no END) AS owner_3_no,
      adr.khataNo AS khatano,
      adr.mauza AS city,
      adr.plotno AS plotno,
      adr.plotArea AS plotarea,
      adr.occupancy AS occupancy_type,
      adr.patwarihn AS patwari_halka_no,
      CASE
        WHEN bp.status = 'APPROVED' THEN 'Approved'
        WHEN bp.status IN (
          'INITIATED','CITIZEN_APPROVAL_INPROCESS','INPROGRESS','PENDING_APPL_FEE', 'DOC_VERIFICATION_PENDING_BY_ENGINEER',
          'DOC_VERIFICATION_INPROGRESS_BY_BUILDER',
          'APPROVAL_INPROGRESS', 'DOC_VERIFICATION_INPROGRESS_BY_ENGINEER',
          'POST_FEE_APPROVAL_INPROGRESS',
          'PENDING_SANC_FEE_PAYMENT', 'CITIZEN_ACTION_PENDING_AT_DOC_VERIF'
        ) THEN 'Pending'
        WHEN bp.status = 'REJECTED' THEN 'Rejected'
      END AS status  FROM
     eg_bpa_buildingplan bp
      INNER JOIN eg_land_ownerinfo ownerinfo ON bp.landid = ownerinfo.landinfoid
      INNER JOIN eg_user Citizenuser ON ownerinfo.uuid = Citizenuser.uuid
      INNER JOIN eg_land_address adr ON adr.landinfoid = bp.landid
      INNER JOIN eg_user Architectuser ON bp.createdby = Architectuser.uuid
      LEFT JOIN DistinctNames AS dn ON bp.applicationno = dn.applicationno
  groupby: GROUP BY 
           bp.applicationno, 
           bp.tenantid, 
           adr.khataNo, 
           adr.mauza, 
          adr.plotno, 
          adr.plotArea, 
          adr.occupancy, 
          adr.patwarihn, 
          Architectuser.name, 
          Architectuser.mobilenumber, 
          Architectuser.emailid, 
          bp.createdtime, 
          bp.approvaldate, 
          bp.status
  order by: ORDER BY bp.applicationno 
  


