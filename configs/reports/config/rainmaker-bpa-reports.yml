ReportDefinitions:  
- reportName: MisPendencyReport
  decryptionPathId: MisPendencyReport
  summary: fetch pending applications
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: Name_of_ULB
    label: ULB
    type: string
    source: bpa
  - name: total_cases_uploaded
    label: Total Cases Uploaded
    type: string
    source: bpa
  - name: Total_Pending_Cases
    label: Total Pending Cases
    type: string
    source: bpa
  - name: Case_Pending_at_Sub_Engineer
    label: Cases Pending at Sub Engineer
    type: string
    source: bpa
  - name: Case_Pending_at_Builder
    label: Cases Pending at Builder
    type: string
    source: bpa
  - name: Case_Pending_at_Commisoner
    label: Cases Pending at Commissoner
    type: string
    source: bpa
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    disabled: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: true
    searchClause: AND 1=1
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND 1=1
  query: select ms.message as Name_of_ULB , bp.tenantid, count(*) as total_cases_uploaded,
   COUNT(CASE WHEN bp.status IN ('INITIATED','DOC_VERIFICATION_INPROGRESS_BY_ENGINEER', 'DOC_VERIFICATION_INPROGRESS_BY_BUILDER', 'POST_FEE_APPROVAL_INPROGRESS', 'APPROVAL_INPROGRESS') THEN 1 END) AS Total_Pending_Cases,
   COUNT (case when bp.status='DOC_VERIFICATION_INPROGRESS_BY_ENGINEER' or bp.status='POST_FEE_APPROVAL_INPROGRESS' then 1 end) as Case_Pending_at_Sub_Engineer,
   COUNT (case when bp.status='DOC_VERIFICATION_INPROGRESS_BY_BUILDER'  then 1 end) as Case_Pending_at_Builder,
   COUNT (case when bp.status='APPROVAL_INPROGRESS' then 1 end) as Case_Pending_at_Commisoner
   from eg_bpa_buildingplan bp inner join message ms on bp.tenantid = ms.code WHERE createdtime >= $fromDate
  groupby:  group by bp.tenantid,ms.message
  
- reportName: HistoryMisReport
  decryptionPathId: HistoryMisReport
  summary: Fetches History Mis Report data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: Application_no
    label: Application No
    type: string
    source: bpa
  - name: name
    label: Applicant Name
    type: string
    source: bpa
  - name: Application_date
    label: Application Date
    type: string
    source: bpa
  - name: status
    label: Status
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: plotno
    label: Plot No
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: mobilenumber
    label: Mobile Number
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: khataNo
    label: KhataNo
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: City
    label: City
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: plotArea
    label: PlotArea
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: occupancy
    label: Occupancy
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    disabled: true
    searchClause: AND bp.tenantid = $tenantid
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime  <= $toDate 
  query: select applicationno as Application_no,bp.tenantid,usr.name as name,to_char(To_timestamp(bp.createdtime / 1000), 'DD/MM/YYYY') as Application_date, status, mobilenumber, khataNo, mauza as City, plotno, plotArea, occupancy from eg_bpa_buildingplan bp inner join eg_land_address adr on adr.landinfoid=bp.landid inner join eg_user usr on usr.uuid=bp.createdby where 1=1
  orderby: order by bp.createdtime ASC
  
- reportName: MisPaymentReport
  decryptionPathId: MisPaymentReport
  summary: Fetches payment data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: application_no
    label: Application No
    type: string
    source: bpa
  - name: name
    label: Owner Name
    type: string
    source: bpa
  - name: Application_date
    label: Application Date
    type: string
    source: bpa
  - name: occupancy_type
    label: Occupancy Type
    type: string
  - name: status
    label: Payment Status
    type: string
    source: bpa
  - name: Application_fee
    label: Application Fees
    type: string
    source: bpa
  - name: Road_Blockage_Charges
    label: Road Blockage Charges
    type: string
    source: bpa
  - name: Development_charges
    label: Development charges
    type: string
    source: bpa
  - name: Sub_Tax_Labor_Tax
    label: Labour Cess
    type: string
    source: bpa
  - name: Saman_Shulk
    label: Saman Shulk
    type: string
    source: bpa
  - name: Building_Permission_Fees_nhnew
    label: Building Permission Fees(nhnew)
    type: string
    source: bpa
  - name: Post_Fees_Building_Permission_Non_High_Rise_New
    label: Post Fees - Building Permission Non High Rise New
    type: string
    source: bpa
  - name: Boundry_Wall
    label: Boundry Wall
    type: string
    source: bpa
  - name: Other_Charges
    label: Other Charges
    type: string
    source: bpa
  - name: Building_Permission_Fees_Non_High_Rise_New
    label: Building Permission Fees(Non High Rise New)
    type: string
    source: bpa
  - name: Other_Building_permission_fee
    label: Other Fee of Building Permission
    type: string
    source: bpa
  - name: Penalty
    label: Penalty
    type: string
    source: bpa
  - name: Electricity_Connection
    label: Electricity Connection
    type: string
    source: bpa
  - name: Total_Amount
    label: Total Amount
    type: string
    source: bpa
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime <= $toDate
  query: SELECT application_no, Citizenuser.name as name, TO_CHAR(TO_TIMESTAMP(bp.createdtime / 1000),'DD/MM/YYYY') AS Application_date,bp.tenantid,adr.occupancy as occupancy_type,
    CASE 
        WHEN bp.status = 'APPROVED' THEN 'Approved'
        WHEN bp.status IN ('DOC_VERIFICATION_PENDING_BY_ENGINEER','DOC_VERIFICATION_INPROGRESS_BY_BUILDER','APPROVAL_INPROGRESS','DOC_VERIFICATION_INPROGRESS_BY_ENGINEER', 'POST_FEE_APPROVAL_INPROGRESS', 'PENDING_SANC_FEE_PAYMENT','CITIZEN_ACTION_PENDING_AT_DOC_VERIF') THEN 'Post Fee Pending'
        WHEN bp.status = 'PENDING_APPL_FEE' THEN 'Pre Fees Pending'
    END AS status,
    SUM(CASE WHEN charges_type_name = 'Application Fees' THEN amount END) AS Application_fee,
    SUM(CASE WHEN charges_type_name = 'Road Blockage Charges' THEN amount END) AS Road_Blockage_Charges,
    SUM(CASE WHEN charges_type_name = 'Rain Water Harvesting Fee' THEN amount END) AS Rain_Water_Harvesting_Fee,
    SUM(CASE WHEN charges_type_name = 'Development Charges' THEN amount END) AS Development_charges,
    SUM(CASE WHEN charges_type_name = 'Sub-Tax (Labor Tax)' OR charges_type_name = 'Sub-Tax(Karmakar)Fees' OR charges_type_name = 'Labour Cess' THEN amount END) AS Sub_Tax_Labor_Tax,
    SUM(CASE WHEN charges_type_name = 'Saman Shulk' THEN amount END) AS Saman_Shulk,
    SUM(CASE WHEN charges_type_name = 'Building Permission Fees(nhnew)' THEN amount END) AS Building_Permission_Fees_nhnew,
    SUM(CASE WHEN charges_type_name = 'Post Fees-Building Permission(Non High Rise New)' OR charges_type_name = 'Post Fees-Building Permission Non High Rise New' OR charges_type_name = 'Post Fees - Building Permission (Non High Rise New)' OR charges_type_name = 'Post Fees - Building Permission Non High Rise New' THEN amount END) AS Post_Fees_Building_Permission_Non_High_Rise_New,
    SUM(CASE WHEN charges_type_name = 'Boundry Wall' THEN amount END) AS Boundry_Wall,
    SUM(CASE WHEN charges_type_name = 'Other Charges' THEN amount END) AS Other_Charges,
    SUM(CASE WHEN charges_type_name = 'Building Permission Fees(Non High Rise New)' THEN amount END) AS Building_Permission_Fees_Non_High_Rise_New,
    SUM(CASE WHEN charges_type_name = 'Other Fees of Building Permission' THEN amount END) AS Other_Building_permission_fee,
    SUM(CASE WHEN charges_type_name = 'Penalty' THEN amount END) AS Penalty,
    SUM(CASE WHEN charges_type_name = 'Rain Water Harvesting Deposit' THEN amount END) AS Rain_Water_Harvesting_Deposit,
    SUM(CASE WHEN charges_type_name = 'Electricity Connection' THEN amount END) AS Electricity_Connection,
    SUM(amount) AS Total_Amount
    FROM fee_details fd
    INNER JOIN eg_bpa_buildingplan bp ON fd.application_no = bp.applicationno
    INNER JOIN eg_land_ownerinfo ownerinfo ON bp.landid = ownerinfo.landinfoid
    INNER JOIN eg_land_address adr ON bp.landid = adr.landinfoid
    INNER JOIN eg_user Citizenuser ON ownerinfo.uuid = Citizenuser.uuid
    INNER JOIN eg_user usr ON usr.uuid = bp.createdby
    WHERE 1 = 1 AND  bp.status IN ('APPROVED','PENDING_APPL_FEE','DOC_VERIFICATION_PENDING_BY_ENGINEER', 'DOC_VERIFICATION_INPROGRESS_BY_BUILDER', 'APPROVAL_INPROGRESS', 'DOC_VERIFICATION_INPROGRESS_BY_ENGINEER', 'POST_FEE_APPROVAL_INPROGRESS', 'PENDING_SANC_FEE_PAYMENT','CITIZEN_ACTION_PENDING_AT_DOC_VERIF')
  groupby: group by Citizenuser.name, fd.application_no,bp.createdtime,bp.tenantid,bp.status,adr.occupancy
  orderby: order by application_no

- reportName: DirectBhavanAnugyaReport
  decryptionPathId: DirectBhavanAnugyaReport
  summary: Fetches Direct Bhavan Anugya Report data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: Name_of_ULB
    label: Name Of ULB
    type: string
    source: bpa
  - name: Direct_Bhawan_Anugya
    label: Direct Bhawan Anugya
    type: string
    source: bpa
  - name: BPC_issued
    label: Building Permit Certificate Issued
    type: string
    source: bpa
  - name: Document_verification
    label: Document Verification
    type: string
    source: bpa
  - name: Post_Fee_verified
    label: Post Fee Verified
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: Post_Fee_paid
    label: Post Fee Paid
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: Rejected
    label: Rejected Cases
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: Reassign
    label: Reassign Cases
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    disabled: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime  <= $toDate 
  query: select ms.message as Name_of_ULB, bp.tenantid, 
          COUNT(CASE WHEN (bp.status != 'INITIATED' and txn_status='SUCCESS' and txn_amount=1.00) THEN 1 END) AS Direct_Bhawan_Anugya, count(case when (bp.status = 'APPROVED' and txn_status='SUCCESS' and txn_amount=1.00) then 1 end) as BPC_issued, 
          count( case when (bp.status = 'POST_FEE_APPROVAL_INPROGRESS' and txn_status='SUCCESS' and txn_amount=1.00) then 1 end ) as Document_verification, 
          count( case when (bp.status = 'PENDING_SANC_FEE_PAYMENT' and txn_status='SUCCESS' and txn_amount=1.00) then 1 end ) as Post_Fee_verified, 
          count(case when (bp.status = 'APPROVED' and txn_status='SUCCESS' and txn_amount=1.00) then 1 end) as Post_Fee_paid, 
          count(case when (bp.status = 'REJECTED' and txn_status='SUCCESS' and txn_amount=1.00) then 1 end) as Rejected, 
          count(case when (bp.status = 'REASSIGN' and txn_status='SUCCESS' and txn_amount=1.00) then 1 end ) as Reassign, 'NA' as Plinth_Level_Site_Inspection from eg_bpa_buildingplan bp inner join message ms on bp.tenantid = ms.code inner join eg_user usr on bp.createdby = usr.uuid JOIN eg_pg_transactions bd ON bp.applicationno = bd.consumer_code  where 1 = 1 
  groupby: group by bp.tenantid,ms.message
  orderby: order by bp.tenantid,ms.message

- reportName: NonDirectBhavanAnugyaReport
  decryptionPathId: NonDirectBhavanAnugyaReport
  summary: Fetches Non Direct Bhavan Anugya Report data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: Name_of_ULB
    label: Name Of ULB
    type: string
    source: bpa
  - name: NON_DIRECT_CASES_APPLIED
    label: NON DIRECT CASES APPLIED
    type: string
    source: bpa
  - name: APPROVED_CASES
    label: APPROVED CASES
    type: string
    source: bpa
  - name: REJECTED_CASES
    label: REJECT CASES
    type: string
    source: bpa
  - name: INPROCESS
    label: DEPARTMENTAL INPROCESS CASES
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: CITIZEN_INPROCESS
    label: CITIZEN INPROCESS CASES
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    disabled: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime  <= $toDate 
  query: SELECT ms.message as Name_of_ULB,bp.tenantid,
         COUNT(DISTINCT CASE WHEN bd.businessservice = 'BPA.NC_APP_FEE' AND bd.totalamount > 1 THEN bp.applicationno ELSE NULL END) AS NON_DIRECT_CASES_APPLIED,
         COUNT(DISTINCT CASE WHEN bp.status = 'APPROVED' AND bd.businessservice = 'BPA.NC_APP_FEE' AND bd.totalamount > 1 THEN bp.applicationno ELSE NULL END) AS APPROVED_CASES,
         COUNT(DISTINCT CASE WHEN bp.status = 'REJECTED' AND bd.businessservice = 'BPA.NC_APP_FEE' AND bd.totalamount > 1 THEN bp.applicationno ELSE NULL END) AS REJECTED_CASES,
         COUNT(DISTINCT CASE WHEN bd.businessservice = 'BPA.NC_APP_FEE' AND bd.totalamount > 1 AND bp.status IN ('DOC_VERIFICATION_INPROGRESS_BY_ENGINEER', 'DOC_VERIFICATION_INPROGRESS_BY_BUILDER', 'APPROVAL_INPROGRESS', 'POST_FEE_APPROVAL_INPROGRESS', 'POST_FEE_APPROVAL_INPROGRESS_BY_BUILDER') THEN bp.applicationno ELSE NULL END) AS INPROCESS,
         COUNT(DISTINCT CASE WHEN bd.businessservice = 'BPA.NC_APP_FEE' AND bd.totalamount > 1 AND bp.status IN ('INITIATED', 'CITIZEN_APPROVAL_INPROCESS', 'INPROGRESS', 'PENDING_APPL_FEE', 'PENDING_SANC_FEE_PAYMENT','CITIZEN_ACTION_PENDING_AT_DOC_VERIF') THEN bp.applicationno ELSE NULL END) AS CITIZEN_INPROCESS
         FROM eg_bpa_buildingplan bp
         inner join message ms on bp.tenantid = ms.code 
         INNER JOIN egbs_billdetail_v1 bd ON bp.applicationno = bd.consumercode where 1=1
  groupby: GROUP BY bp.tenantid,ms.message
