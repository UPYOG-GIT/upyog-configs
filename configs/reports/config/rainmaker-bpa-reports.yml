ReportDefinitions:
- reportName: bpaApplicationStatusReport
  decryptionPathId: bpaApplicationStatusReport
  summary: Fetches bpa data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: applicationno
    label: Application No
    type: string
    source: bpa
  - name: applicationdate
    label: Application Date
    type: string
    source: bpa 
  - name: name
    label: Name
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: applicationtype
    label: Application Type
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: servicetype
    label: Service Type
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: occupancytype
    label: Occupancy Type
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: status
    label: Status
    type: string
    source: bpa
    showColumn: true
    isLocalisationRequired: true
  - name: currentowner
    label: Current Owner
    type: string
    source: bpa
    showColumn: true	
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime  <= $toDate 
  query: select distinct bp.applicationno,to_char(To_timestamp(bp.createdtime / 1000), 'DD/MM/YYYY') as applicationdate,message as status, landinfo.channel as applicationchannel, usr.name as name, bp.tenantid, usr.uuid as uuid, bp.additionaldetails->>'applicationType' as applicationtype, bp.additionaldetails->> 'serviceType' as servicetype, land.occupancytype, case when isterminatestate=true then null else userassignee.name end as currentowner, bp.approvalno as permitno FROM eg_wf_state_v2 st inner join eg_wf_processinstance_v2 pi on pi.status=st.uuid inner join eg_bpa_buildingplan bp on pi.businessid=bp.applicationno inner join eg_user usr ON bp.createdby = usr.uuid inner join eg_land_unit land ON land.landinfoid = bp.landid inner join eg_land_landinfo landinfo ON land.landinfoid = landinfo.id inner join eg_land_address adr ON adr.landinfoid = landinfo.id inner join eg_user userassignee ON assigner = userassignee.uuid inner join public.message message on message.code=bp.status WHERE 1=1
  group by: GROUP BY bp.applicationno
  orderby: order by applicationdate
  
- reportName: MisPendencyReport
  decryptionPathId: MisPendencyReport
  summary: fetch pending applications
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: Pending_by_subengineer
    label: Pending by Sub Engineer
    type: string
    source: bpa
  - name: Pending_by_Builder
    label: Pending by Builder
    type: string
    source: bpa
  - name: Pending_by_commissioner
    label: Pending by Commissioner
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: ""
  - name: Pending_by_architect
    label: Pending by Architect
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: ""
  - name: Total_pending_cases
    label: Total Pending Cases
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: ""
  searchParams:
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    disabled: true
    searchClause: AND 1=1
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND 1=1

  query: select Pending_by_subengineer,  Pending_by_Builder, Pending_by_commissioner, Pending_by_architect, (Pending_by_subengineer + Pending_by_Builder + Pending_by_commissioner + Pending_by_architect ) as Total_pending_cases from (
        SELECT
      COUNT(CASE WHEN status = 'DOC_VERIFICATION_PENDING_BY_ENGINEER' THEN 1 END) AS Pending_by_subengineer,
      COUNT(CASE WHEN status = 'DOC_VERIFICATION_INPROGRESS_BY_ENGINEER' THEN 1 END) AS Pending_by_Builder,
      COUNT(CASE WHEN status = 'PENDINGAPPROVAL' THEN 1 END) AS Pending_by_commissioner,
      COUNT(CASE WHEN status = 'PENDING_APPL_FEE' THEN 1 END) AS Pending_by_architect
      FROM  eg_bpa_buildingplan WHERE createdtime >= $fromDate) as t WHERE 1=1
  
- reportName: HistoryMisReport
  decryptionPathId: HistoryMisReport
  summary: Fetches History Mis Report data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: Application_no
    label: Application No
    type: string
    source: bpa
  - name: name
    label: Applicant Name
    type: string
    source: bpa
  - name: Application_date
    label: Application Date
    type: string
    source: bpa
  - name: status
    label: Status
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: plotno
    label: Plot No
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: mobilenumber
    label: Mobile Number
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: khataNo
    label: KhataNo
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: City
    label: City
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: plotArea
    label: PlotArea
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: occupancy
    label: Occupancy
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantId&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    disabled: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime  <= $toDate 
  query: select applicationno as Application_no,bp.tenantid,usr.name as name,to_char(To_timestamp(bp.createdtime / 1000), 'DD/MM/YYYY') as Application_date, status, mobilenumber, khataNo, mauza as City, plotno, plotArea, occupancy from eg_bpa_buildingplan bp inner join eg_land_address adr on adr.landinfoid=bp.landid inner join eg_user usr on usr.uuid=bp.createdby where 1=1
  orderby: order by bp.createdtime ASC
  
- reportName: MisPaymentReport
  decryptionPathId: MisPaymentReport
  summary: Fetches payment data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: application_no
    label: Application No
    type: string
    source: bpa
  - name: Application_date
    label: Application Date
    type: string
    source: bpa
  - name: tx_status
    label: Payment Status
    type: string
    source: bpa
  - name: Application_fee
    label: Application Fees
    type: string
    source: bpa
  - name: Road_Blockage_Charges
    label: Road Blockage Charges
    type: string
    source: bpa
  - name: Rain_Water_Harvesting_Fee
    label: Rain Water Harvesting Fee
    type: string
    source: bpa
  - name: Development_charges
    label: Development charges
    type: string
    source: bpa
  - name: Sub_Tax_Labor_Tax
    label: Sub-Tax (Labor Tax)
    type: string
    source: bpa
  - name: Sub_Tax_Karmakar_Fees
    label: Sub-Tax(Karmakar)Fees
    type: string
    source: bpa
  - name: Saman_Shulk
    label: Saman Shulk
    type: string
    source: bpa
  - name: Building_Permission_Fees_nhnew
    label: Building Permission Fees(nhnew)
    type: string
    source: bpa
  - name: Post_Fees_Building_Permission_Non_High_Rise_New
    label: Post Fees - Building Permission Non High Rise New
    type: string
    source: bpa
  - name: Boundry_Wall
    label: Boundry Wall
    type: string
    source: bpa
  - name: Other_Charges
    label: Other Charges
    type: string
    source: bpa
  - name: Building_Permission_Fees_Non_High_Rise_New
    label: Building Permission Fees(Non High Rise New)
    type: string
    source: bpa
  - name: Penalty
    label: Penalty
    type: string
    source: bpa
  - name: Rain_Water_Harvesting_Deposit
    label: Rain Water Harvesting Deposit
    type: string
    source: bpa
  - name: Total_Amount
    label: Total Amount
    type: string
    source: bpa
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime <= $toDate
  query: SELECT application_no,to_char(To_timestamp(bp.createdtime / 1000),'DD/MM/YYYY') AS Application_date,bp.tenantid,txn.txn_status as tx_status,
    SUM(CASE WHEN charges_type_name = 'Application Fees' THEN amount END) AS Application_fee,
    SUM(CASE WHEN charges_type_name = 'Road Blockage Charges' THEN amount END) AS Road_Blockage_Charges,
    SUM(CASE WHEN charges_type_name = 'Rain Water Harvesting Fee' THEN amount END) AS Rain_Water_Harvesting_Fee,
    SUM(CASE WHEN charges_type_name = 'Development Charges' THEN amount END) AS Development_charges,
    SUM(CASE WHEN charges_type_name = 'Sub-Tax (Labor Tax)' THEN amount END) AS Sub_Tax_Labor_Tax,
    SUM(CASE WHEN charges_type_name = 'Sub-Tax(Karmakar)Fees' THEN amount END) AS Sub_Tax_Karmakar_Fees,
    SUM(CASE WHEN charges_type_name = 'Saman Shulk' THEN amount END) AS Saman_Shulk,
    SUM(CASE WHEN charges_type_name = 'Building Permission Fees(nhnew)' THEN amount END) AS Building_Permission_Fees_nhnew,
    SUM(CASE WHEN charges_type_name = 'Post Fees - Building Permission Non High Rise New' THEN amount END) AS Post_Fees_Building_Permission_Non_High_Rise_New,
    SUM(CASE WHEN charges_type_name = 'Boundry Wall' THEN amount END) AS Boundry_Wall,
    SUM(CASE WHEN charges_type_name = 'Other Charges' THEN amount END) AS Other_Charges,
    SUM(CASE WHEN charges_type_name = 'Building Permission Fees(Non High Rise New)' THEN amount END) AS Building_Permission_Fees_Non_High_Rise_New,
    SUM(CASE WHEN charges_type_name = 'Penalty' THEN amount END) AS Penalty,
    SUM(CASE WHEN charges_type_name = 'Rain Water Harvesting Deposit' THEN amount END) AS Rain_Water_Harvesting_Deposit,
    SUM(amount) AS Total_Amount FROM fee_details fd INNER JOIN eg_bpa_buildingplan bp ON fd.application_no = bp.applicationno INNER JOIN eg_pg_transactions txn on txn.consumer_code=fd.application_no INNER JOIN eg_user usr ON usr.uuid = bp.createdby WHERE 1 = 1
  groupby: group by fd.application_no,bp.createdtime,bp.tenantid,txn.txn_status
  orderby: order by application_no

  

 
