ReportDefinitions:
- reportName: bpaApplicationStatusReport
  decryptionPathId: bpaApplicationStatusReport
  summary: Fetches bpa data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: applicationno
    label: Application No
    type: string
    source: bpa
  - name: applicationdate
    label: Application Date
    type: string
    source: bpa 
  - name: approval_date
    label: Approval Date
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: username
    label: Applicant Name
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: altcontactnumber
    label: Applicant Contact No.
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: emailid
    label: Applicant Emailid
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: name
    label: Owner Name
    type: string
    source: bpa
    showColumn: true
    isLocalisationRequired: true
  - name: mobilenumber
    label: Owner Contact No.
    type: string
    source: bpa
    showColumn: true
  - name: khatano
    label: Khasra No
    type: string
    source: bpa
  - name: city
    label: City
    type: string
    source: bpa
  - name: plotno
    label: Plot No
    type: string
    source: bpa
  - name: plotarea
    label: Plot Area
    type: string
    source: bpa
  - name: occupancy_type
    label: Occupancy Type
    type: string
    source: bpa
  - name: patwari_halka_no
    label: Patwari Halka No.
    type: string
    source: bpa
  - name: prefees
    label: Pre payment Amount
    type: string
    source: bpa
  - name: postfees
    label: Post Payment Amount
    type: string
    source: bpa
  - name: status
    label: Application Status
    type: string
    source: bpa
  - name: Building_permission_certificate
    label: Building permission Certificate Issued date
    type: string
    source: bpa	
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime  <= $toDate  
  query: SELECT billdetail.consumercode as applicationno,bp.tenantid,TO_CHAR(TO_TIMESTAMP(bp.createdtime / 1000), 'DD/MM/YYYY') AS applicationdate,TO_CHAR(TO_TIMESTAMP(bp.approvaldate / 1000), 'DD/MM/YYYY') AS approval_date,Architectuser.uuid as uuid,Citizenuser.uuid as Cuuid,Architectuser.name AS username,Architectuser.mobilenumber as altcontactnumber,Architectuser.emailid as emailid,Citizenuser.name as name,Citizenuser.mobilenumber as mobilenumber,adr.khataNo as khatano,adr.mauza AS city,adr.plotno as plotno,adr.plotArea as plotarea,adr.occupancy AS occupancy_type,adr.patwarihn AS patwari_halka_no,
        SUM(CASE WHEN billdetail.businessservice = 'BPA.NC_APP_FEE' THEN billdetail.totalamount ELSE 0 END) AS prefees,
        SUM(CASE WHEN billdetail.businessservice = 'BPA.NC_SAN_FEE' THEN billdetail.totalamount ELSE 0 END) AS postfees,
     CASE
        WHEN bp.status = 'APPROVED' THEN 'Approved'
        WHEN bp.status IN('PENDING_APPL_FEE','DOC_VERIFICATION_PENDING_BY_ENGINEER','DOC_VERIFICATION_INPROGRESS_BY_BUILDER','APPROVAL_INPROGRESS','DOC_VERIFICATION_INPROGRESS_BY_ENGINEER', 'POST_FEE_APPROVAL_INPROGRESS', 'PENDING_SANC_FEE_PAYMENT') THEN 'Pending' 
        WHEN bp.status = 'REJECTED' THEN 'Rejected'
     END AS status,TO_CHAR(TO_TIMESTAMP(bp.approvaldate / 1000), 'DD/MM/YYYY') AS Building_permission_certificate FROM egbs_billdetail_v1 billdetail INNER JOIN eg_bpa_buildingplan bp ON billdetail.consumercode = bp.applicationno INNER JOIN eg_land_address adr ON adr.landinfoid = bp.landid INNER JOIN eg_user Architectuser ON bp.createdby = Architectuser.uuid INNER JOIN eg_land_ownerinfo ownerinfo ON bp.landid = ownerinfo.landinfoid INNER JOIN eg_user Citizenuser ON ownerinfo.uuid = Citizenuser.uuid WHERE 1=1 AND bp.status IN ('APPROVED','REJECTED','PENDING_APPL_FEE','DOC_VERIFICATION_PENDING_BY_ENGINEER', 'DOC_VERIFICATION_INPROGRESS_BY_BUILDER', 'APPROVAL_INPROGRESS', 'DOC_VERIFICATION_INPROGRESS_BY_ENGINEER', 'POST_FEE_APPROVAL_INPROGRESS', 'PENDING_SANC_FEE_PAYMENT')
  groupby: GROUP BY billdetail.consumercode,bp.createdtime,bp.approvaldate, Architectuser.name,Architectuser.mobilenumber,Architectuser.emailid,Citizenuser.name,Citizenuser.mobilenumber,adr.khataNo,adr.plotno,adr.plotArea,occupancy_type, patwari_halka_no,adr.mauza,bp.status,bp.tenantid,Architectuser.uuid,Citizenuser.uuid
  orderby: order by billdetail.consumercode
  
- reportName: MisPendencyReport
  decryptionPathId: MisPendencyReport
  summary: fetch pending applications
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: Pending_by_subengineer
    label: Pending by Sub Engineer
    type: string
    source: bpa
  - name: Pending_by_Builder
    label: Pending by Builder
    type: string
    source: bpa
  - name: Pending_by_commissioner
    label: Pending by Commissioner
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: ""
  - name: Pending_by_architect
    label: Pending by Architect
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: ""
  - name: Total_pending_cases
    label: Total Pending Cases
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: ""
  searchParams:
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    disabled: true
    searchClause: AND 1=1
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND 1=1

  query: select Pending_by_subengineer,  Pending_by_Builder, Pending_by_commissioner, Pending_by_architect, (Pending_by_subengineer + Pending_by_Builder + Pending_by_commissioner + Pending_by_architect ) as Total_pending_cases from (
        SELECT
      COUNT(CASE WHEN status = 'DOC_VERIFICATION_PENDING_BY_ENGINEER' THEN 1 END) AS Pending_by_subengineer,
      COUNT(CASE WHEN status = 'DOC_VERIFICATION_INPROGRESS_BY_ENGINEER' THEN 1 END) AS Pending_by_Builder,
      COUNT(CASE WHEN status = 'PENDINGAPPROVAL' THEN 1 END) AS Pending_by_commissioner,
      COUNT(CASE WHEN status = 'PENDING_APPL_FEE' THEN 1 END) AS Pending_by_architect
      FROM  eg_bpa_buildingplan WHERE createdtime >= $fromDate) as t WHERE 1=1
  
- reportName: HistoryMisReport
  decryptionPathId: HistoryMisReport
  summary: Fetches History Mis Report data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: Application_no
    label: Application No
    type: string
    source: bpa
  - name: name
    label: Applicant Name
    type: string
    source: bpa
  - name: Application_date
    label: Application Date
    type: string
    source: bpa
  - name: status
    label: Status
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: plotno
    label: Plot No
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: mobilenumber
    label: Mobile Number
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: khataNo
    label: KhataNo
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: City
    label: City
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: plotArea
    label: PlotArea
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: occupancy
    label: Occupancy
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantId&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    disabled: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime  <= $toDate 
  query: select applicationno as Application_no,bp.tenantid,usr.name as name,to_char(To_timestamp(bp.createdtime / 1000), 'DD/MM/YYYY') as Application_date, status, mobilenumber, khataNo, mauza as City, plotno, plotArea, occupancy from eg_bpa_buildingplan bp inner join eg_land_address adr on adr.landinfoid=bp.landid inner join eg_user usr on usr.uuid=bp.createdby where 1=1
  orderby: order by bp.createdtime ASC
  
- reportName: MisPaymentReport
  decryptionPathId: MisPaymentReport
  summary: Fetches payment data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: application_no
    label: Application No
    type: string
    source: bpa
  - name: Application_date
    label: Application Date
    type: string
    source: bpa
  - name: status
    label: Payment Status
    type: string
    source: bpa
  - name: Application_fee
    label: Application Fees
    type: string
    source: bpa
  - name: Road_Blockage_Charges
    label: Road Blockage Charges
    type: string
    source: bpa
  - name: Rain_Water_Harvesting_Fee
    label: Rain Water Harvesting Fee
    type: string
    source: bpa
  - name: Development_charges
    label: Development charges
    type: string
    source: bpa
  - name: Sub_Tax_Labor_Tax
    label: Sub-Tax (Labor Tax)
    type: string
    source: bpa
  - name: Sub_Tax_Karmakar_Fees
    label: Sub-Tax(Karmakar)Fees
    type: string
    source: bpa
  - name: Saman_Shulk
    label: Saman Shulk
    type: string
    source: bpa
  - name: Building_Permission_Fees_nhnew
    label: Building Permission Fees(nhnew)
    type: string
    source: bpa
  - name: Post_Fees_Building_Permission_Non_High_Rise_New
    label: Post Fees - Building Permission Non High Rise New
    type: string
    source: bpa
  - name: Boundry_Wall
    label: Boundry Wall
    type: string
    source: bpa
  - name: Other_Charges
    label: Other Charges
    type: string
    source: bpa
  - name: Building_Permission_Fees_Non_High_Rise_New
    label: Building Permission Fees(Non High Rise New)
    type: string
    source: bpa
  - name: Penalty
    label: Penalty
    type: string
    source: bpa
  - name: Rain_Water_Harvesting_Deposit
    label: Rain Water Harvesting Deposit
    type: string
    source: bpa
  - name: Total_Amount
    label: Total Amount
    type: string
    source: bpa
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime <= $toDate
  query: SELECT application_no,TO_CHAR(TO_TIMESTAMP(bp.createdtime / 1000),'DD/MM/YYYY') AS Application_date,bp.tenantid,
    CASE 
        WHEN status = 'APPROVED' THEN 'Approved'
        WHEN status IN ('DOC_VERIFICATION_PENDING_BY_ENGINEER','DOC_VERIFICATION_INPROGRESS_BY_BUILDER','APPROVAL_INPROGRESS','DOC_VERIFICATION_INPROGRESS_BY_ENGINEER', 'POST_FEE_APPROVAL_INPROGRESS', 'PENDING_SANC_FEE_PAYMENT') THEN 'Post Fee Pending'
        WHEN status = 'PENDING_APPL_FEE' THEN 'Pre Fees Pending'
    END AS status,
    SUM(CASE WHEN charges_type_name = 'Application Fees' THEN amount END) AS Application_fee,
    SUM(CASE WHEN charges_type_name = 'Road Blockage Charges' THEN amount END) AS Road_Blockage_Charges,
    SUM(CASE WHEN charges_type_name = 'Rain Water Harvesting Fee' THEN amount END) AS Rain_Water_Harvesting_Fee,
    SUM(CASE WHEN charges_type_name = 'Development Charges' THEN amount END) AS Development_charges,
    SUM(CASE WHEN charges_type_name = 'Sub-Tax (Labor Tax)' THEN amount END) AS Sub_Tax_Labor_Tax,
    SUM(CASE WHEN charges_type_name = 'Sub-Tax(Karmakar)Fees' THEN amount END) AS Sub_Tax_Karmakar_Fees,
    SUM(CASE WHEN charges_type_name = 'Saman Shulk' THEN amount END) AS Saman_Shulk,
    SUM(CASE WHEN charges_type_name = 'Building Permission Fees(nhnew)' THEN amount END) AS Building_Permission_Fees_nhnew,
    SUM(CASE WHEN charges_type_name = 'Post Fees - Building Permission Non High Rise New' THEN amount END) AS Post_Fees_Building_Permission_Non_High_Rise_New,
    SUM(CASE WHEN charges_type_name = 'Boundry Wall' THEN amount END) AS Boundry_Wall,
    SUM(CASE WHEN charges_type_name = 'Other Charges' THEN amount END) AS Other_Charges,
    SUM(CASE WHEN charges_type_name = 'Building Permission Fees(Non High Rise New)' THEN amount END) AS Building_Permission_Fees_Non_High_Rise_New,
    SUM(CASE WHEN charges_type_name = 'Penalty' THEN amount END) AS Penalty,
    SUM(CASE WHEN charges_type_name = 'Rain Water Harvesting Deposit' THEN amount END) AS Rain_Water_Harvesting_Deposit,
    SUM(amount) AS Total_Amount
    FROM fee_details fd
    INNER JOIN eg_bpa_buildingplan bp ON fd.application_no = bp.applicationno
    INNER JOIN eg_user usr ON usr.uuid = bp.createdby
    WHERE 1 = 1 AND  status IN ('APPROVED','PENDING_APPL_FEE','DOC_VERIFICATION_PENDING_BY_ENGINEER', 'DOC_VERIFICATION_INPROGRESS_BY_BUILDER', 'APPROVAL_INPROGRESS', 'DOC_VERIFICATION_INPROGRESS_BY_ENGINEER', 'POST_FEE_APPROVAL_INPROGRESS', 'PENDING_SANC_FEE_PAYMENT')
  groupby: group by fd.application_no,bp.createdtime,bp.tenantid,bp.status
  orderby: order by application_no

- reportName: DirectBhavanAnugyaReport
  decryptionPathId: DirectBhavanAnugyaReport
  summary: Fetches Direct Bhavan Anugya Report data based on provided search parameters
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: Name_of_ULB
    label: Name Of ULB
    type: string
    source: bpa
  - name: Direct_Bhawan_Anugya
    label: Direct Bhawan Anugya
    type: string
    source: bpa
  - name: BPC_issued
    label: Building Permit Certificate Issued
    type: string
    source: bpa
  - name: Document_verification
    label: Document Verification
    type: string
    source: bpa
  - name: Post_Fee_verified
    label: Post Fee Verified
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix:
  - name: Post_Fee_paid
    label: Post Fee Paid
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: Rejected
    label: Rejected Cases
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: Reassign
    label: Reassign Cases
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  - name: Plinth_Level_Site_Inspection
    label: Plinth Level Site Inspection
    type: string
    source: bpa
    isLocalisationRequired: true
    localisationPrefix: 
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: bpa
    wrapper: true
    isMandatory: true
    disabled: true
    searchClause: AND bp.tenantid = $ulb
  - name: fromDate
    label: FromDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime >= $fromDate
  - name: toDate
    label: ToDate
    type: epoch
    source: bpa
    isMandatory: false
    searchClause: AND bp.createdtime  <= $toDate 
  query: select ms.message as Name_of_ULB, bp.tenantid, COUNT(CASE WHEN (bp.status != 'INITIATED' and txn_status='SUCCESS' and txn_amount=1.00) THEN 1 END) AS Direct_Bhawan_Anugya, count(case when bp.status = 'APPROVED' then 1 end) as BPC_issued, count( case when bp.status = 'POST_FEE_APPROVAL_INPROGRESS' then 1 end ) as Document_verification, count( case when bp.status = 'PENDING_SANC_FEE_PAYMENT' then 1 end ) as Post_Fee_verified, count(case when bp.status = 'APPROVED' then 1 end) as Post_Fee_paid, count(case when bp.status = 'REJECTED' then 1 end) as Rejected, count(case when bp.status = 'REASSIGN' then 1 end ) as Reassign, 'NA' as Plinth_Level_Site_Inspection from eg_bpa_buildingplan bp inner join message ms on bp.tenantid = ms.code inner join eg_user usr on bp.createdby = usr.uuid JOIN eg_pg_transactions bd ON bp.applicationno = bd.consumer_code  where 1 = 1 
  groupby: group by bp.tenantid,ms.message
  orderby: order by bp.tenantid,ms.message

 
